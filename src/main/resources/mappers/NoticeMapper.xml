<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whirly.dao.NoticeMapper">
	<resultMap id="BaseResultMap" type="com.whirly.model.Notice">
		<id column="notice_id" jdbcType="INTEGER" property="noticeId" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="lever" jdbcType="SMALLINT" property="lever" />
		<result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="publicer" jdbcType="VARCHAR" property="publicer" />
		<result column="type" jdbcType="VARCHAR" property="type" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.whirly.model.Notice">
		<result column="content" jdbcType="LONGVARCHAR" property="content" />
	</resultMap>
	<resultMap id="NoticePubTimeVOMap" type="com.whirly.vo.chart.NoticePubTimeVO">
		<result column="datetime" jdbcType="VARCHAR" property="datetime" />
		<result column="count" jdbcType="INTEGER" property="count" />
	</resultMap>
	<resultMap id="BaseCountVOMap" type="com.whirly.vo.chart.BaseCountVO">
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="count" jdbcType="INTEGER" property="count" />
	</resultMap>
	<resultMap id="PublicerCountVOMap" type="com.whirly.vo.chart.NoticeCountByPublicerVO">
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="count" jdbcType="INTEGER" property="count" />
		<result column="duty" jdbcType="VARCHAR" property="duty" />
		<result column="departmentName" jdbcType="VARCHAR" property="departmentName" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		notice_id, title, user_id, lever, createtime, publicer,
		type
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByExampleWithBLOBs" parameterType="com.whirly.model.NoticeExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="com.whirly.model.NoticeExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from notice
		where notice_id = #{noticeId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from notice
		where notice_id = #{noticeId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.whirly.model.NoticeExample">
		delete from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.whirly.model.Notice">
		<selectKey keyProperty="noticeId" order="AFTER" resultType="java.lang.Integer">
			select LAST_INSERT_ID()
		</selectKey>
		insert into notice (notice_id,
		title, user_id,
		lever, publicer,
		type,
		content)
		values
		(#{noticeId,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR},
		#{userId,jdbcType=INTEGER},
		#{lever,jdbcType=SMALLINT},
		#{publicer,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR},
		#{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.whirly.model.Notice">
		insert into notice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="noticeId != null">
				notice_id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="lever != null">
				lever,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="publicer != null">
				publicer,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="noticeId != null">
				#{noticeId,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="lever != null">
				#{lever,jdbcType=SMALLINT},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="publicer != null">
				#{publicer,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.whirly.model.NoticeExample"
		resultType="java.lang.Long">
		select count(*) from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update notice
		<set>
			<if test="record.noticeId != null">
				notice_id = #{record.noticeId,jdbcType=INTEGER},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.lever != null">
				lever = #{record.lever,jdbcType=SMALLINT},
			</if>
			<if test="record.createtime != null">
				createtime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.publicer != null">
				publicer = #{record.publicer,jdbcType=VARCHAR},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=VARCHAR},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update notice
		set notice_id = #{record.noticeId,jdbcType=INTEGER},
		title = #{record.title,jdbcType=VARCHAR},
		user_id =
		#{record.userId,jdbcType=INTEGER},
		lever =
		#{record.lever,jdbcType=SMALLINT},
		createtime =
		#{record.createtime,jdbcType=TIMESTAMP},
		publicer =
		#{record.publicer,jdbcType=VARCHAR},
		type =
		#{record.type,jdbcType=VARCHAR},
		content =
		#{record.content,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update notice
		set notice_id = #{record.noticeId,jdbcType=INTEGER},
		title = #{record.title,jdbcType=VARCHAR},
		user_id =
		#{record.userId,jdbcType=INTEGER},
		lever =
		#{record.lever,jdbcType=SMALLINT},
		createtime =
		#{record.createtime,jdbcType=TIMESTAMP},
		publicer =
		#{record.publicer,jdbcType=VARCHAR},
		type =
		#{record.type,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.whirly.model.Notice">
		update notice
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="lever != null">
				lever = #{lever,jdbcType=SMALLINT},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="publicer != null">
				publicer = #{publicer,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where notice_id = #{noticeId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.whirly.model.Notice">
		update
		notice
		set title = #{title,jdbcType=VARCHAR},
		user_id =
		#{userId,jdbcType=INTEGER},
		lever = #{lever,jdbcType=SMALLINT},
		createtime = #{createtime,jdbcType=TIMESTAMP},
		publicer =
		#{publicer,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR},
		content =
		#{content,jdbcType=LONGVARCHAR}
		where notice_id =
		#{noticeId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.whirly.model.Notice">
		update notice
		set
		title = #{title,jdbcType=VARCHAR},
		user_id =
		#{userId,jdbcType=INTEGER},
		lever = #{lever,jdbcType=SMALLINT},
		createtime = #{createtime,jdbcType=TIMESTAMP},
		publicer =
		#{publicer,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR}
		where
		notice_id = #{noticeId,jdbcType=INTEGER}
	</update>
	<select id="selectByExampleWithBLOBsWithRowbounds"
		parameterType="com.whirly.model.NoticeExample" resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExampleWithRowbounds" parameterType="com.whirly.model.NoticeExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<!-- 根据表单查询 -->
	<select id="selectBySearchForm" parameterType="com.whirly.form.NoticeSearchForm"
		resultMap="ResultMapWithBLOBs">
		select notice_id, title, user_id, lever, createtime, publicer,
		type,content from notice where 1=1
		<if test="userId != null">
			and user_id =
			#{userId,jdbcType=INTEGER}
		</if>

		<if test="lever != null">
			and lever = #{lever,jdbcType=SMALLINT}
		</if>
		<if test="type != null">
			and type = #{type,jdbcType=VARCHAR}
		</if>
		<if test="q != null">
			and (title like #{q,jdbcType=VARCHAR} or content like
			#{q,jdbcType=VARCHAR})
		</if>
		order by createtime desc
	</select>
	<select id="countPubTime" resultMap="NoticePubTimeVOMap">
		SELECT DATE_FORMAT(
		createtime, "%Y-%m-%d" ) as datetime , COUNT( * ) as count
		FROM notice
		GROUP BY DATE_FORMAT(createtime, "%Y-%m-%d" )
		order by datetime asc
	</select>

	<select id="countByDepartment" resultMap="BaseCountVOMap">
		select count(*) as
		count,
		d.department_id as id,
		d.name as name
		from notice n join publicer
		p join
		department d
		where
		n.user_id = p.user_id and p.deparment_id =
		d.department_id
		group by
		d.department_id
		order by count desc
	</select>
	<select id="countByPublicer" parameterType="java.lang.Integer"
		resultMap="PublicerCountVOMap">
		select COUNT(*) as count, username as name, u.user_id as id,
		p.duty
		,d.`name` as departmentName
		from notice n join user u join
		publicer p join department d
		where n.user_id = u.user_id and u.user_id
		= p.user_id and p.deparment_id =
		d.department_id
		group by n.user_id
		HAVING count > 0
		ORDER BY count desc LIMIT #{limit,jdbcType=INTEGER}
	</select>
	<select id="countByTypes" resultMap="BaseCountVOMap">
		select count(*) as count,
		type as name
		from notice
		GROUP BY type
		order by count desc
	</select>
</mapper>