<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whirly.dao.FileMapper">
	<resultMap id="BaseResultMap" type="com.whirly.model.File">
		<id column="file_id" jdbcType="INTEGER" property="fileId" />
		<result column="filename" jdbcType="VARCHAR" property="filename" />
		<result column="remarks" jdbcType="VARCHAR" property="remarks" />
		<result column="url" jdbcType="VARCHAR" property="url" />
		<result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		file_id, filename, remarks, url, createtime, user_id
	</sql>
	<select id="selectByExample" parameterType="com.whirly.model.FileExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from file
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from file
		where file_id = #{fileId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from file
		where file_id = #{fileId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.whirly.model.FileExample">
		delete from file
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.whirly.model.File"
		useGeneratedKeys="true" keyProperty="fileId">
		insert into file (filename,
		remarks,
		url, user_id
		)
		values ( #{filename,jdbcType=VARCHAR},
		#{remarks,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR},
		#{userId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.whirly.model.File">
		insert into file
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="fileId != null">
				file_id,
			</if>
			<if test="filename != null">
				filename,
			</if>
			<if test="remarks != null">
				remarks,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="userId != null">
				user_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="fileId != null">
				#{fileId,jdbcType=INTEGER},
			</if>
			<if test="filename != null">
				#{filename,jdbcType=VARCHAR},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.whirly.model.FileExample"
		resultType="java.lang.Long">
		select count(*) from file
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update file
		<set>
			<if test="record.fileId != null">
				file_id = #{record.fileId,jdbcType=INTEGER},
			</if>
			<if test="record.filename != null">
				filename = #{record.filename,jdbcType=VARCHAR},
			</if>
			<if test="record.remarks != null">
				remarks = #{record.remarks,jdbcType=VARCHAR},
			</if>
			<if test="record.url != null">
				url = #{record.url,jdbcType=VARCHAR},
			</if>
			<if test="record.createtime != null">
				createtime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update file
		set file_id = #{record.fileId,jdbcType=INTEGER},
		filename =
		#{record.filename,jdbcType=VARCHAR},
		remarks =
		#{record.remarks,jdbcType=VARCHAR},
		url =
		#{record.url,jdbcType=VARCHAR},
		createtime =
		#{record.createtime,jdbcType=TIMESTAMP},
		user_id =
		#{record.userId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.whirly.model.File">
		update file
		<set>
			<if test="filename != null">
				filename = #{filename,jdbcType=VARCHAR},
			</if>
			<if test="remarks != null">
				remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
		</set>
		where file_id = #{fileId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.whirly.model.File">
		update file
		set
		filename = #{filename,jdbcType=VARCHAR},
		remarks =
		#{remarks,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		createtime =
		#{createtime,jdbcType=TIMESTAMP},
		user_id = #{userId,jdbcType=INTEGER}
		where file_id = #{fileId,jdbcType=INTEGER}
	</update>
	<select id="selectByExampleWithRowbounds" parameterType="com.whirly.model.FileExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from file
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
</mapper>