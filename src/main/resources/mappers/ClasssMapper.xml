<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whirly.dao.ClasssMapper">
	<resultMap id="BaseResultMap" type="com.whirly.model.Classs">
		<id column="class_id" jdbcType="INTEGER" property="classId" />
		<result column="department_id" jdbcType="INTEGER" property="departmentId" />
		<result column="profession" jdbcType="VARCHAR" property="profession" />
		<result column="grade" jdbcType="INTEGER" property="grade" />
		<result column="class_number" jdbcType="INTEGER" property="classNumber" />
		<result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
		<association property="department" column="department_id"
			select="com.whirly.dao.DepartmentMapper.selectByPrimaryKey" />
	</resultMap>
	<!-- 返回 vo -->
	<resultMap id="BaseResultMapVO" type="com.whirly.vo.ClassVO">
		<id column="class_id" jdbcType="INTEGER" property="classId" />
		<result column="department_id" jdbcType="INTEGER" property="departmentId" />
		<result column="profession" jdbcType="VARCHAR" property="profession" />
		<result column="grade" jdbcType="INTEGER" property="grade" />
		<result column="class_number" jdbcType="INTEGER" property="classNumber" />
		<result column="createtime" jdbcType="TIMESTAMP" property="createtime" />

		<result column="name" jdbcType="VARCHAR" property="departmentName" />
		<result column="parent_id" jdbcType="INTEGER" property="parentId" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="is_active" jdbcType="BIT" property="isActive" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		class_id, department_id, profession, grade, class_number,
		createtime
	</sql>
	<select id="selectByExample" parameterType="com.whirly.model.ClasssExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from class
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from class
		where class_id = #{classId,jdbcType=INTEGER}
	</select>
	<!-- 选出所有主键 -->
	<select id="selectAllIds" resultType="java.lang.Integer">
		select
		class_id
		from
		class
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from class
		where class_id = #{classId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.whirly.model.ClasssExample">
		delete from class
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.whirly.model.Classs">
		insert into class (class_id,
		department_id, profession,
		grade, class_number, createtime
		)
		values
		(#{classId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER},
		#{profession,jdbcType=VARCHAR},
		#{grade,jdbcType=INTEGER},
		#{classNumber,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.whirly.model.Classs">
		insert into class
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="classId != null">
				class_id,
			</if>
			<if test="departmentId != null">
				department_id,
			</if>
			<if test="profession != null">
				profession,
			</if>
			<if test="grade != null">
				grade,
			</if>
			<if test="classNumber != null">
				class_number,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="classId != null">
				#{classId,jdbcType=INTEGER},
			</if>
			<if test="departmentId != null">
				#{departmentId,jdbcType=INTEGER},
			</if>
			<if test="profession != null">
				#{profession,jdbcType=VARCHAR},
			</if>
			<if test="grade != null">
				#{grade,jdbcType=INTEGER},
			</if>
			<if test="classNumber != null">
				#{classNumber,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.whirly.model.ClasssExample"
		resultType="java.lang.Long">
		select count(*) from class
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update class
		<set>
			<if test="record.classId != null">
				class_id = #{record.classId,jdbcType=INTEGER},
			</if>
			<if test="record.departmentId != null">
				department_id = #{record.departmentId,jdbcType=INTEGER},
			</if>
			<if test="record.profession != null">
				profession = #{record.profession,jdbcType=VARCHAR},
			</if>
			<if test="record.grade != null">
				grade = #{record.grade,jdbcType=INTEGER},
			</if>
			<if test="record.classNumber != null">
				class_number = #{record.classNumber,jdbcType=INTEGER},
			</if>
			<if test="record.createtime != null">
				createtime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update class
		set class_id = #{record.classId,jdbcType=INTEGER},
		department_id = #{record.departmentId,jdbcType=INTEGER},
		profession =
		#{record.profession,jdbcType=VARCHAR},
		grade =
		#{record.grade,jdbcType=INTEGER},
		class_number =
		#{record.classNumber,jdbcType=INTEGER},
		createtime =
		#{record.createtime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.whirly.model.Classs">
		update class
		<set>
			<if test="departmentId != null">
				department_id = #{departmentId,jdbcType=INTEGER},
			</if>
			<if test="profession != null">
				profession = #{profession,jdbcType=VARCHAR},
			</if>
			<if test="grade != null">
				grade = #{grade,jdbcType=INTEGER},
			</if>
			<if test="classNumber != null">
				class_number = #{classNumber,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where class_id = #{classId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.whirly.model.Classs">
		update class
		set
		department_id = #{departmentId,jdbcType=INTEGER},
		profession =
		#{profession,jdbcType=VARCHAR},
		grade = #{grade,jdbcType=INTEGER},
		class_number = #{classNumber,jdbcType=INTEGER},
		createtime =
		#{createtime,jdbcType=TIMESTAMP}
		where class_id =
		#{classId,jdbcType=INTEGER}
	</update>
	<select id="selectByExampleWithRowbounds" parameterType="com.whirly.model.ClasssExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from class
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<!-- 根据 学院名称，专业名称，年级，班级号 查询班级 -->
	<select id="selectByParams" parameterType="com.whirly.dto.ClasssParamDto"
		resultMap="BaseResultMapVO">
		select
		class_id, profession, grade,
		class_number,c.createtime,
		d.department_id, name, parent_id, remark,
		is_active
		from class c
		LEFT OUTER JOIN
		department d
		on
		c.department_id=d.department_id
		where
		name =
		#{departmentName,jdbcType=VARCHAR} and
		profession =
		#{profession,jdbcType=VARCHAR} and
		grade = #{grade,jdbcType=INTEGER}
		and
		class_number = #{classNumber,jdbcType=INTEGER}
		order by c.createtime
	</select>

	<!-- 批量导入 -->
	<insert id="batchInsert" useGeneratedKeys="true" keyProperty="classId"
		parameterType="java.util.List">
		insert into class (
		department_id, profession,
		grade,
		class_number
		)
		values
		<foreach collection="list" item="classs" index="index"
			separator=",">
			(
			#{classs.departmentId,jdbcType=INTEGER},
			#{classs.profession,jdbcType=VARCHAR},
			#{classs.grade,jdbcType=INTEGER},
			#{classs.classNumber,jdbcType=INTEGER}
			)
		</foreach>
	</insert>

	<!-- 根据 searchForm 查询班级 -->
	<select id="selectBySearchForm" parameterType="com.whirly.form.ClasssSearchForm"
		resultMap="BaseResultMapVO">
		select
		class_id, profession, grade,
		class_number,c.createtime,
		d.department_id, name, parent_id, remark,
		is_active
		from class c
		JOIN
		department d
		on
		c.department_id=d.department_id
		where 1 =1
		<if test="departmentId != null">
			and d.department_id = #{departmentId,jdbcType=INTEGER}
		</if>
		<if test="q != null">
			and profession like #{q,jdbcType=VARCHAR}
		</if>
		order by grade desc,profession asc,class_number asc
	</select>
</mapper>