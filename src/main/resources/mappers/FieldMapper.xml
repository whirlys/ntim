<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whirly.dao.FieldMapper">
	<resultMap id="BaseResultMap" type="com.whirly.model.Field">
		<id column="field_id" jdbcType="INTEGER" property="fieldId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="required" jdbcType="BIT" property="required" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="constraint" jdbcType="CHAR" property="constraint" />
		<result column="default_value" jdbcType="VARCHAR" property="defaultValue" />
		<result column="form_id" jdbcType="INTEGER" property="formId" />
		<result column="rank" jdbcType="INTEGER" property="rank" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		field_id, name, required, type, constraint, default_value,
		form_id, rank
	</sql>
	<select id="selectByExample" parameterType="com.whirly.model.FieldExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from field
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from field
		where field_id = #{fieldId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from field
		where field_id = #{fieldId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.whirly.model.FieldExample">
		delete from field
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.whirly.model.Field">
		insert into field (field_id,
		name, required,
		type, constraint, default_value,
		form_id, rank)
		values
		(#{fieldId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{required,jdbcType=BIT},
		#{type,jdbcType=VARCHAR},
		#{constraint,jdbcType=CHAR}, #{defaultValue,jdbcType=VARCHAR},
		#{formId,jdbcType=INTEGER}, #{rank,jdbcType=INTEGER})
	</insert>
	<insert id="batchInsert" parameterType="java.util.List"
		useGeneratedKeys="true" keyProperty="fieldId">
		insert into field (`name`, required,
		type, `constraint`,
		default_value,
		form_id, rank)
		values

		<foreach collection="list" item="field" index="index"
			separator=",">
			(
			#{field.name,jdbcType=VARCHAR},
			#{field.required,jdbcType=BIT},
			#{field.type,jdbcType=VARCHAR},
			#{field.constraint,jdbcType=CHAR},
			#{field.defaultValue,jdbcType=VARCHAR},
			#{field.formId,jdbcType=INTEGER}, #{field.rank,jdbcType=INTEGER})
		</foreach>
	</insert>
	<insert id="insertSelective" parameterType="com.whirly.model.Field">
		insert into field
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="fieldId != null">
				field_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="required != null">
				required,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="constraint != null">
				constraint,
			</if>
			<if test="defaultValue != null">
				default_value,
			</if>
			<if test="formId != null">
				form_id,
			</if>
			<if test="rank != null">
				rank,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="fieldId != null">
				#{fieldId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="required != null">
				#{required,jdbcType=BIT},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="constraint != null">
				#{constraint,jdbcType=CHAR},
			</if>
			<if test="defaultValue != null">
				#{defaultValue,jdbcType=VARCHAR},
			</if>
			<if test="formId != null">
				#{formId,jdbcType=INTEGER},
			</if>
			<if test="rank != null">
				#{rank,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.whirly.model.FieldExample"
		resultType="java.lang.Long">
		select count(*) from field
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update field
		<set>
			<if test="record.fieldId != null">
				field_id = #{record.fieldId,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.required != null">
				required = #{record.required,jdbcType=BIT},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=VARCHAR},
			</if>
			<if test="record.constraint != null">
				constraint = #{record.constraint,jdbcType=CHAR},
			</if>
			<if test="record.defaultValue != null">
				default_value = #{record.defaultValue,jdbcType=VARCHAR},
			</if>
			<if test="record.formId != null">
				form_id = #{record.formId,jdbcType=INTEGER},
			</if>
			<if test="record.rank != null">
				rank = #{record.rank,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update field
		set field_id = #{record.fieldId,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		required =
		#{record.required,jdbcType=BIT},
		type =
		#{record.type,jdbcType=VARCHAR},
		constraint =
		#{record.constraint,jdbcType=CHAR},
		default_value =
		#{record.defaultValue,jdbcType=VARCHAR},
		form_id =
		#{record.formId,jdbcType=INTEGER},
		rank =
		#{record.rank,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.whirly.model.Field">
		update field
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="required != null">
				required = #{required,jdbcType=BIT},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="constraint != null">
				constraint = #{constraint,jdbcType=CHAR},
			</if>
			<if test="defaultValue != null">
				default_value = #{defaultValue,jdbcType=VARCHAR},
			</if>
			<if test="formId != null">
				form_id = #{formId,jdbcType=INTEGER},
			</if>
			<if test="rank != null">
				rank = #{rank,jdbcType=INTEGER},
			</if>
		</set>
		where field_id = #{fieldId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.whirly.model.Field">
		update field
		set
		name = #{name,jdbcType=VARCHAR},
		required = #{required,jdbcType=BIT},
		type = #{type,jdbcType=VARCHAR},
		constraint =
		#{constraint,jdbcType=CHAR},
		default_value =
		#{defaultValue,jdbcType=VARCHAR},
		form_id = #{formId,jdbcType=INTEGER},
		rank = #{rank,jdbcType=INTEGER}
		where field_id =
		#{fieldId,jdbcType=INTEGER}
	</update>
	<select id="selectByExampleWithRowbounds" parameterType="com.whirly.model.FieldExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from field
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByFormId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select field_id, `name`, required, type, `constraint`,
		default_value, rank,form_id
		from field where form_id =
		#{formId,jdbcType=INTEGER}
		order by rank asc
	</select>
</mapper>