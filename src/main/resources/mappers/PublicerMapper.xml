<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whirly.dao.PublicerMapper">
	<resultMap id="BaseResultMap" type="com.whirly.model.Publicer">
		<id column="publicer_id" jdbcType="INTEGER" property="publicerId" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="deparment_id" jdbcType="INTEGER" property="deparmentId" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="office" jdbcType="VARCHAR" property="office" />
		<result column="duty" jdbcType="VARCHAR" property="duty" />
		<result column="email" jdbcType="VARCHAR" property="email" />

		<association property="user" column="user_id"
			select="com.whirly.dao.UserMapper.selectByPrimaryKey" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.whirly.model.Publicer">
		<result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
	</resultMap>
	<!-- 返回VO -->
	<resultMap id="BaseResultMapVO" type="com.whirly.vo.PublicerVO">
		<id column="publicer_id" jdbcType="INTEGER" property="publicerId" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="deparment_id" jdbcType="INTEGER" property="deparmentId" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="office" jdbcType="VARCHAR" property="office" />
		<result column="duty" jdbcType="VARCHAR" property="duty" />
		<result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
		<result column="email" jdbcType="VARCHAR" property="email" />

		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="is_staff" jdbcType="BIT" property="isStaff" />
		<result column="is_active" jdbcType="BIT" property="isActive" />
		<result column="role" jdbcType="VARCHAR" property="role" />
		<result column="avatar" jdbcType="VARCHAR" property="avatar" />
		<result column="signature" jdbcType="VARCHAR" property="signature" />
		<result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="last_login" jdbcType="TIMESTAMP" property="lastLogin" />

		<result column="name" jdbcType="VARCHAR" property="departmentName" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		publicer_id, user_id, deparment_id, title, office, duty,
		email
	</sql>
	<sql id="Blob_Column_List">
		introduction
	</sql>
	<select id="selectByExampleWithBLOBs" parameterType="com.whirly.model.PublicerExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from publicer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="com.whirly.model.PublicerExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from publicer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from publicer
		where publicer_id = #{publicerId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		publicer
		where publicer_id = #{publicerId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.whirly.model.PublicerExample">
		delete from publicer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.whirly.model.Publicer">
		insert into publicer
		(publicer_id, user_id, deparment_id,
		title, office, duty,
		email,
		introduction)
		values (#{publicerId,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER},
		#{deparmentId,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR}, #{office,jdbcType=VARCHAR},
		#{duty,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{introduction,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.whirly.model.Publicer">
		insert into publicer
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="publicerId != null">
				publicer_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="deparmentId != null">
				deparment_id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="office != null">
				office,
			</if>
			<if test="duty != null">
				duty,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="introduction != null">
				introduction,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="publicerId != null">
				#{publicerId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="deparmentId != null">
				#{deparmentId,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="office != null">
				#{office,jdbcType=VARCHAR},
			</if>
			<if test="duty != null">
				#{duty,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="introduction != null">
				#{introduction,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.whirly.model.PublicerExample"
		resultType="java.lang.Long">
		select count(*) from publicer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update publicer
		<set>
			<if test="record.publicerId != null">
				publicer_id = #{record.publicerId,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.deparmentId != null">
				deparment_id = #{record.deparmentId,jdbcType=INTEGER},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.office != null">
				office = #{record.office,jdbcType=VARCHAR},
			</if>
			<if test="record.duty != null">
				duty = #{record.duty,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.introduction != null">
				introduction =
				#{record.introduction,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update publicer
		set publicer_id =
		#{record.publicerId,jdbcType=INTEGER},
		user_id =
		#{record.userId,jdbcType=INTEGER},
		deparment_id =
		#{record.deparmentId,jdbcType=INTEGER},
		title =
		#{record.title,jdbcType=VARCHAR},
		office =
		#{record.office,jdbcType=VARCHAR},
		duty =
		#{record.duty,jdbcType=VARCHAR},
		email =
		#{record.email,jdbcType=VARCHAR},
		introduction =
		#{record.introduction,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update publicer
		set publicer_id =
		#{record.publicerId,jdbcType=INTEGER},
		user_id =
		#{record.userId,jdbcType=INTEGER},
		deparment_id =
		#{record.deparmentId,jdbcType=INTEGER},
		title =
		#{record.title,jdbcType=VARCHAR},
		office =
		#{record.office,jdbcType=VARCHAR},
		duty =
		#{record.duty,jdbcType=VARCHAR},
		email =
		#{record.email,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.whirly.model.Publicer">
		update publicer
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="deparmentId != null">
				deparment_id = #{deparmentId,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="office != null">
				office = #{office,jdbcType=VARCHAR},
			</if>
			<if test="duty != null">
				duty = #{duty,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="introduction != null">
				introduction = #{introduction,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where publicer_id = #{publicerId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.whirly.model.Publicer">
		update
		publicer
		set user_id = #{userId,jdbcType=INTEGER},
		deparment_id =
		#{deparmentId,jdbcType=INTEGER},
		title = #{title,jdbcType=VARCHAR},
		office = #{office,jdbcType=VARCHAR},
		duty = #{duty,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		introduction =
		#{introduction,jdbcType=LONGVARCHAR}
		where publicer_id =
		#{publicerId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.whirly.model.Publicer">
		update publicer
		set user_id = #{userId,jdbcType=INTEGER},
		deparment_id =
		#{deparmentId,jdbcType=INTEGER},
		title = #{title,jdbcType=VARCHAR},
		office = #{office,jdbcType=VARCHAR},
		duty = #{duty,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR}
		where publicer_id =
		#{publicerId,jdbcType=INTEGER}
	</update>
	<select id="selectByExampleWithBLOBsWithRowbounds"
		parameterType="com.whirly.model.PublicerExample" resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from publicer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExampleWithRowbounds" parameterType="com.whirly.model.PublicerExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from publicer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<!-- 根据表单查询，返回VO -->
	<select id="selectBySearchForm" parameterType="com.whirly.form.PublicerSearchForm"
		resultMap="BaseResultMapVO">
		select publicer_id, u.user_id, p.deparment_id, title,
		office, duty ,
		introduction, email,
		account, username, is_staff, u.is_active,
		role,
		avatar,
		signature,
		u.createtime, last_login, name
		from user u ,
		publicer p
		,
		department d
		WHERE p.user_id = u.user_id and
		p.deparment_id =
		d.department_id
		<if test="q != null">
			and (account like #{q,jdbcType=VARCHAR} or username like
			#{q,jdbcType=VARCHAR} or title like #{q,jdbcType=VARCHAR})
		</if>
		<if test="departmentId != null">
			and (p.deparment_id = #{departmentId,jdbcType=INTEGER})
		</if>
		order by user_id desc
	</select>
</mapper>