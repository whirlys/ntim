<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whirly.dao.MessageMapper">
	<resultMap id="BaseResultMap" type="com.whirly.model.Message">
		<id column="message_id" jdbcType="INTEGER" property="messageId" />
		<result column="msg_from" jdbcType="INTEGER" property="msgFrom" />
		<result column="msg_to" jdbcType="INTEGER" property="msgTo" />
		<result column="cmd_id" jdbcType="INTEGER" property="cmdId" />
		<result column="msg_seq" jdbcType="INTEGER" property="msgSeq" />
		<result column="msg_type" jdbcType="SMALLINT" property="msgType" />
		<result column="is_read" jdbcType="BIT" property="isRead" />
		<result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.whirly.model.Message">
		<result column="content" jdbcType="LONGVARCHAR" property="content" />
	</resultMap>

	<resultMap id="OfflineMessageVO" type="com.whirly.vo.OffLineMessageVO">
		<id column="message_id" jdbcType="INTEGER" property="cid" />
		<result column="msg_from" jdbcType="INTEGER" property="id" />
		<result column="avatar" jdbcType="VARCHAR" property="avatar" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="msg_type" jdbcType="SMALLINT" property="msgType" />
		<result column="createtime" jdbcType="TIMESTAMP" property="timestamp" />
		<result column="content" jdbcType="LONGVARCHAR" property="content" />
	</resultMap>

	<resultMap id="NoticeMessageVOMap" type="com.whirly.vo.MessageVO">
		<id column="message_id" jdbcType="INTEGER" property="messageId" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="content" jdbcType="LONGVARCHAR" property="content" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="avatar" jdbcType="VARCHAR" property="avatar" />
		<result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		message_id, msg_from, msg_to, cmd_id, msg_seq, msg_type,
		is_read, createtime
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByExampleWithBLOBs" parameterType="com.whirly.model.MessageExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="com.whirly.model.MessageExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from message
		where message_id = #{messageId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		message
		where message_id = #{messageId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.whirly.model.MessageExample">
		delete from message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.whirly.model.Message">
		insert into message (msg_from,
		msg_to,
		cmd_id, msg_seq, msg_type,
		is_read, content
		)
		values (
		#{msgFrom,jdbcType=INTEGER}, #{msgTo,jdbcType=INTEGER},
		#{cmdId,jdbcType=INTEGER}, #{msgSeq,jdbcType=INTEGER},
		#{msgType,jdbcType=SMALLINT},
		#{isRead,jdbcType=BIT},
		#{content,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.whirly.model.Message">
		insert into message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="messageId != null">
				message_id,
			</if>
			<if test="msgFrom != null">
				msg_from,
			</if>
			<if test="msgTo != null">
				msg_to,
			</if>
			<if test="cmdId != null">
				cmd_id,
			</if>
			<if test="msgSeq != null">
				msg_seq,
			</if>
			<if test="msgType != null">
				msg_type,
			</if>
			<if test="isRead != null">
				is_read,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="messageId != null">
				#{messageId,jdbcType=INTEGER},
			</if>
			<if test="msgFrom != null">
				#{msgFrom,jdbcType=INTEGER},
			</if>
			<if test="msgTo != null">
				#{msgTo,jdbcType=INTEGER},
			</if>
			<if test="cmdId != null">
				#{cmdId,jdbcType=INTEGER},
			</if>
			<if test="msgSeq != null">
				#{msgSeq,jdbcType=INTEGER},
			</if>
			<if test="msgType != null">
				#{msgType,jdbcType=SMALLINT},
			</if>
			<if test="isRead != null">
				#{isRead,jdbcType=BIT},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.whirly.model.MessageExample"
		resultType="java.lang.Long">
		select count(*) from message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update message
		<set>
			<if test="record.messageId != null">
				message_id = #{record.messageId,jdbcType=INTEGER},
			</if>
			<if test="record.msgFrom != null">
				msg_from = #{record.msgFrom,jdbcType=INTEGER},
			</if>
			<if test="record.msgTo != null">
				msg_to = #{record.msgTo,jdbcType=INTEGER},
			</if>
			<if test="record.cmdId != null">
				cmd_id = #{record.cmdId,jdbcType=INTEGER},
			</if>
			<if test="record.msgSeq != null">
				msg_seq = #{record.msgSeq,jdbcType=INTEGER},
			</if>
			<if test="record.msgType != null">
				msg_type = #{record.msgType,jdbcType=SMALLINT},
			</if>
			<if test="record.isRead != null">
				is_read = #{record.isRead,jdbcType=BIT},
			</if>
			<if test="record.createtime != null">
				createtime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update message
		set message_id = #{record.messageId,jdbcType=INTEGER},
		msg_from = #{record.msgFrom,jdbcType=INTEGER},
		msg_to =
		#{record.msgTo,jdbcType=INTEGER},
		cmd_id =
		#{record.cmdId,jdbcType=INTEGER},
		msg_seq =
		#{record.msgSeq,jdbcType=INTEGER},
		msg_type =
		#{record.msgType,jdbcType=SMALLINT},
		is_read =
		#{record.isRead,jdbcType=BIT},
		createtime =
		#{record.createtime,jdbcType=TIMESTAMP},
		content =
		#{record.content,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update message
		set message_id = #{record.messageId,jdbcType=INTEGER},
		msg_from = #{record.msgFrom,jdbcType=INTEGER},
		msg_to =
		#{record.msgTo,jdbcType=INTEGER},
		cmd_id =
		#{record.cmdId,jdbcType=INTEGER},
		msg_seq =
		#{record.msgSeq,jdbcType=INTEGER},
		msg_type =
		#{record.msgType,jdbcType=SMALLINT},
		is_read =
		#{record.isRead,jdbcType=BIT},
		createtime =
		#{record.createtime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.whirly.model.Message">
		update message
		<set>
			<if test="msgFrom != null">
				msg_from = #{msgFrom,jdbcType=INTEGER},
			</if>
			<if test="msgTo != null">
				msg_to = #{msgTo,jdbcType=INTEGER},
			</if>
			<if test="cmdId != null">
				cmd_id = #{cmdId,jdbcType=INTEGER},
			</if>
			<if test="msgSeq != null">
				msg_seq = #{msgSeq,jdbcType=INTEGER},
			</if>
			<if test="msgType != null">
				msg_type = #{msgType,jdbcType=SMALLINT},
			</if>
			<if test="isRead != null">
				is_read = #{isRead,jdbcType=BIT},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where message_id = #{messageId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.whirly.model.Message">
		update
		message
		set msg_from = #{msgFrom,jdbcType=INTEGER},
		msg_to =
		#{msgTo,jdbcType=INTEGER},
		cmd_id = #{cmdId,jdbcType=INTEGER},
		msg_seq =
		#{msgSeq,jdbcType=INTEGER},
		msg_type = #{msgType,jdbcType=SMALLINT},
		is_read = #{isRead,jdbcType=BIT},
		createtime =
		#{createtime,jdbcType=TIMESTAMP},
		content =
		#{content,jdbcType=LONGVARCHAR}
		where message_id =
		#{messageId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.whirly.model.Message">
		update message
		set
		msg_from = #{msgFrom,jdbcType=INTEGER},
		msg_to =
		#{msgTo,jdbcType=INTEGER},
		cmd_id = #{cmdId,jdbcType=INTEGER},
		msg_seq =
		#{msgSeq,jdbcType=INTEGER},
		msg_type = #{msgType,jdbcType=SMALLINT},
		is_read = #{isRead,jdbcType=BIT},
		createtime =
		#{createtime,jdbcType=TIMESTAMP}
		where message_id =
		#{messageId,jdbcType=INTEGER}
	</update>
	<select id="selectByExampleWithBLOBsWithRowbounds"
		parameterType="com.whirly.model.MessageExample" resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExampleWithRowbounds" parameterType="com.whirly.model.MessageExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<!-- 获取离线消息 -->
	<select id="getOfflineMessageByUserId" parameterType="java.lang.Integer"
		resultMap="OfflineMessageVO">
		select
		message_id,msg_from,avatar,msg_type,m.createtime,content,username
		from
		message m
		join user u where m.msg_from = u.user_id and m.msg_to =
		#{userId,jdbcType=INTEGER}
		and is_read = false
	</select>

	<update id="batchUpdateReaded" parameterType="java.util.List">
		update message set is_read = true
		where message_id in
		<foreach collection="list" index="index" item="item"
			separator="," open="(" close=")">
			#{item,jdbcType=INTEGER}
		</foreach>
	</update>

	<select id="noticeMessage" parameterType="com.whirly.form.messageSearchForm"
		resultMap="NoticeMessageVOMap">
		select username, m.message_id,m.content,m.createtime,
		u.user_id ,u.avatar from
		message m join user u join notice n
		WHERE
		m.msg_from
		=
		u.user_id
		and
		m.msg_to = n.notice_id and msg_type = 3 and
		msg_to =
		#{noticeId,jdbcType=INTEGER}
		and message_id >
		#{baseId,jdbcType=INTEGER}
		order by m.createtime asc
	</select>
</mapper>